esphome:
  name: sunroomac

esp32:
  board: esp32dev
  framework:
    type: esp-idf
    version: recommended

# Enable logging
logger:
  logs:
    component: ERROR # Remove the "Your component takes to long to respond warning"

# Enable Home Assistant API
api:
  encryption: 
    key: !secret encryption_key

ota:
 - platform: esphome
   password: !secret ota_pwd

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pwd
  manual_ip:
    static_ip: 10.0.16.20
    gateway: 10.0.16.1
    subnet: 255.255.255.0

# Specify pins used by the board to comunicate with RS485 board - in this case M5STACK
uart:
  tx_pin: GPIO1   # Use GPIO26 for ATOM Tail485 
  rx_pin: GPIO3   # Use GPIO32 for ATOM Tail485
  # For older devices it could also be 2400. But you should start with 9600.
  baud_rate: 9600
  parity: EVEN

captive_portal:
        
sensor:
  - platform: wifi_signal
    name: "SunroomAC WiFi Strength"
    update_interval: 480s

binary_sensor:
  - platform: status
    name: "SunroomAC Status"

light:
  - platform: esp32_rmt_led_strip
    rgb_order: GRB
    pin: 27
    num_leds: 1
    rmt_channel: 0
    chipset: SK6812
    name: "NeoPixel Light"
    id: led
    effects:
      - pulse:
          name: "Slow Pulse"
          transition_length: 250ms
          update_interval: 250ms
          min_brightness: 50%
          max_brightness: 100%
      - pulse:
          name: "Fast Pulse"
          transition_length: 100ms
          update_interval: 100ms
          min_brightness: 50%
          max_brightness: 100%



## SAMSUNG AC CONFIGURATION

# Import custom component from GitHub
external_components:
  - source: github://omerfaruk-aran/esphome_samsung_hvac_bus@main # use @main if you want the latest development (possibly unstable?)
    components: [samsung_ac]

# Configuration of AC component
samsung_ac:
  # For NonNASA devices the following option can be enabled to prevent the device from sleeping when idle. This allows
  # values like internal and external temperature to continue to be tracked when the device isn't in use.
  non_nasa_keepalive: false
  
  #When enabled (set to true), this option will log the messages associated with undefined codes on the device. This is useful for debugging and identifying any unexpected or unknown codes that the device may receive during operation.
  debug_log_undefined_messages: false
  
  #When enabled (set to true), this option logs messages associated with defined codes on the device. This helps in monitoring the behavior of the device by recording the activity related to known, expected codes.
  debug_log_messages: false

  # Capabilities configure the features alle devices of your AC system have (all parts of this section are optional). 
  # All capabilities are off by default, you need to enable only those your devices have.
  # You can override or configure them also on a per devices basis (look below for that).
  capabilities: 
    vertical_swing: true
    horizontal_swing: true
    # Presets define special AC modes like Windfree and so on. 
    # The following modes are available: sleep, quiet, fast, longreach, windfree
    presets: 
      # short version
      quiet:
        enabled: true
      sleep: 
        enabled: true
      fast: 
        enabled: true
      windfree: 
        enabled: true

  devices:
    # Skip everything below on the first run! Wait a minute, watch your ESPHome logs until you see the "Discovered devices:" section and you see some addresses:
    # For NASA devices it looks like this (with 4 indoor devices): 
    #   Indoor:  20.00.00, 20.00.01, 20.00.02, 20.00.03
    # For NonNASA devices it looks like this (with 2 indoor devices): 
    #   Indoor:  00, 01
    # You need this addresses for the the sections below. If you see only a "-" then you should visit the troubleshooting section in the readme. 

    # Repeat everything below for each indoor device address you see in your logs
    - address: "20.00.00" # Indoor device address 
      # Each property below is optional (climate, room_temperature etc.) - you can delete those which you dont need.
      # For the names we suggest to choose a combination of room name and the thing it controls. 

      # Creates climate control in Home Assistant. A climate control combines multiple of the controls below (like temperature, mode etc.)
      climate:
        name: "SunroomAC"

      # The controls directly below are all included in the climate control. Its adviced to only add the climate control and skip the extra controls.
      room_temperature:
        name: "Indoor Temperature"
        id: sunroomac_temp

      # If your AC sits near or inside the ceiling, the reported room temperature is often a little bit heigher then whats 
      # measured below. This property can be used to correct that value.
      # room_temperature_offset: -1.4

      # Only supported on NASA devices
      room_humidity:
        name: "Indoor Humidity"
      

    - address: "10.00.00"
      # This sensor captures and monitors specific error codes returned by the HVAC system.
      # When an error occurs, the sensor detects the error code and updates its value accordingly.
      # Additionally, by using the blueprint available at https://github.com/omerfaruk-aran/esphome_samsung_ac_blueprint,
      # you can automatically send detailed error messages to your mobile devices based on the captured error codes.
      error_code:
        name: "Error Code"

      # Only supported on NASA based heatpumps
      outdoor_temperature: # Should be used with outdoor device address
        name: "Outdoor Temperature"
        
      # This sensor measures the instantaneous power consumption of the outdoor unit in Watts.
      # The captured value represents the current power draw of the outdoor HVAC components, helping track energy usage patterns.
      outdoor_instantaneous_power:
        name: "Outdoor Power"

      # This sensor records the cumulative energy consumption of the outdoor unit in kWh.
      # It calculates the total energy consumed over time, allowing users to monitor and analyze energy efficiency.
      outdoor_cumulative_energy:
        name: "Outdoor Cumulative Energy"